<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Login</title>
  <link rel="stylesheet" href="./assets/style.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" />
</head>

<body>
  <div class="wrapper">
    <div class="title"><span>Login Form</span></div>
    <form id="loginForm" action="/login" method="POST">
      <div class="row">
        <i class="fas fa-user"></i>
        <input id="email" type="text" name="email" placeholder="Email or Phone" required />
        <div id="emailError" class="error-message">Invalid email</div>
      </div>
      <div class="row">
        <i class="fas fa-lock"></i>
        <input id="password" type="password" name="password" placeholder="Password" required />
        <i id="togglePassword" class="fas fa-eye"></i>
        <div id="passwordError" class="error-message">Password must be at least 6 characters</div>
      </div>

      <div class="pass"><a href="/forgotpassword">Forgot password?</a></div>
      <div class="row button">
        <input type="submit" id="loginButton" value="Login" />
      </div>
      <div class="signup-link">Not a member? <a href="/signup">Signup now</a></div>
    </form>
  </div>
</body>
<script src="https://cdn.jsdelivr.net/npm/js-cookie@3/dist/js.cookie.min.js"></script>
<script>
  document.getElementById("loginForm").addEventListener("submit", function (event) {
    const email = document.getElementById("email").value;
    const password = document.getElementById("password").value;

    if (!email || !password) {
      event.preventDefault()
      alert("Please fill all the fields")
      return;
    }
  });

  document.getElementById("togglePassword").addEventListener("click", function () {
    const passwordField = document.getElementById("password")
    const type = passwordField.type === "password" ? "text" : "password";
    passwordField.type = type;
    this.classList.toggle("fa-eye")
    this.classList.toggle("fa-eye-slash")
  });

  document.getElementById("email").addEventListener("input", function () {
    const emailError = document.getElementById("emailError");
    if (this.value.includes("@")) {
      emailError.style.display = "none";
    } else {
      emailError.textContent = "Invalid email";
      emailError.style.display = "block";
    }
  });

  document.getElementById("password").addEventListener("input", function () {
    const passwordError = document.getElementById("passwordError");
    if (this.value.length >= 6) {
      passwordError.style.display = "none";
    } else {
      passwordError.textContent = "Password must be at least 6 characters";
      passwordError.style.display = "block";
    }
  });

  document.getElementById("loginForm").addEventListener("submit", function (event) {
    const email = document.getElementById("email").value;
    const password = document.getElementById("password").value;
    const emailError = document.getElementById("emailError");
    const passwordError = document.getElementById("passwordError");

    let isValid = true;

    if (!email.includes("@")) {
      emailError.textContent = "Invalid email";
      emailError.style.display = "block";
      isValid = false;
    }

    if (password.length < 6) {
      passwordError.textContent = "Password must be at least 6 characters";
      passwordError.style.display = "block";
      isValid = false;
    }

    if (!isValid) {
      event.preventDefault();
    }
  });


  window.addEventListener("load", function () {
    fetchCookie()
    const jwtToken = Cookies.get("jwt")
    if (jwtToken && typeof jwtToken === "string") {
      verifyJWT(jwtToken)
    }
  });

  function fetchCookie() {
    fetch("/getcookie")
      .then((response) => response.json())
      .then((data) => {
        console.log("Cookie:", data)
        if (data && data.jwt) {
          verifyJWT(data.jwt);
        }
      })
      .catch((error) => {
        console.error("Error fetching cookie:", error)
      });
  }

  function verifyJWT(token) {
    if (!token || typeof token !== "string") {
      console.error("Invalid token format")
      return;
    }

    fetch("/verifyJwt", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ token }),
    })
      .then((response) => response.json())
      .then((data) => {
        if (data.success) {
          window.location.href = data.redirect;
        } else {
          console.error("Error verifying JWT token:", data.error)
        }
      })
      .catch((error) => {
        console.error("Error verifying JWT token:", error)
      });
  }
</script>

</html>